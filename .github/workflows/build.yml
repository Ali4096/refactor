name: Github Actions for Spring Boot PR's and Pushes

on:
  push:
    branches: [dev,main]  # Trigger on pushes to the 'dev' branch
    paths:
      - "**/*.java"    # Monitor changes to Java files in any directory
      - "pom.xml"      # For Maven-based Spring Boot projects
  pull_request:
    branches: [dev]
    paths:
      - "**/*.java"
      - "pom.xml"

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment
    strategy:
      matrix:
        java-version: [11, 17]  # Run the workflow with multiple Java versions (adjust as needed)

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Checkout the repository code

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}  # Set up the appropriate JDK version
          distribution: 'adoptopenjdk'  # Use the AdoptOpenJDK distribution

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository  # Cache the Maven dependencies to speed up builds
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Spring Boot project with Maven
        run: mvn clean install -DskipTests=true  # Build the project (without running tests initially)

      - name: Run tests with Maven
        run: mvn test  # Run the unit tests with Maven

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: .  # Assuming the root of the repository is the base directory
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub token for authentication
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    # SonarCloud token for analysis
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=zemoso-tech_zemoso-tech
